# ---- eagle-i standard logging configuration properties ----
# log4j.properties files should *only* exist within web applications
# (typically in src/main/resources in a module called webapp-*) and in test directories (src/test/resources)
# -- see log4j documentation http://logging.apache.org/log4j/1.2/manual.html

# ROOT LOGGER
# Set the root logger to log to both the console appender and a
# rolling file appender with default level of WARN
log4j.rootLogger=WARN, CA

## APPENDERS (i.e. where the logging statements end up)
## Daily rolling file
#log4j.appender.R=org.apache.log4j.DailyRollingFileAppender
#log4j.appender.R.Encoding=UTF-8
#log4j.appender.R.Append=true
#log4j.appender.R.layout=org.apache.log4j.PatternLayout
#log4j.appender.R.layout.ConversionPattern=%d{ISO8601} %p %c - %m%n
## Important: file location (if you copy this properties file make sure to change this accordingly)
#log4j.appender.R.File=${catalina.base}/logs/model.log

# Console
# goes to catalina.out in Tomcat
log4j.appender.CA=org.apache.log4j.ConsoleAppender
log4j.appender.CA.Encoding=UTF-8
log4j.appender.CA.layout=org.apache.log4j.PatternLayout
log4j.appender.CA.layout.ConversionPattern=%d{ISO8601} %p %c - %m%n


# LOGGERS (i.e. where the logging statements come from)
# Configure standard hierarchical loggers to be instantiated in code via class names
# Turn off additivity so that messages don't propagate up to rootLogger
# Syntax: log4j.logger.[logger-name]=debugLevel, AppenderA, AppenderB
#log4j.logger.org.eaglei=DEBUG, R
#log4j.additivity.org.eaglei=false


# Typically, for intensive debugging, you should try:
#   log4j.logger.[logger-name]=DEBUG, R
#   log4j.appender.R.BufferedIO=false
#   log4j.appender.R.ImmediateFlush=true
# And for production:
# 	log4j.logger.[logger-name]=INFO, R
#	log4j.appender.R.BufferedIO=true
# 	log4j.appender.R.ImmediateFlush=false